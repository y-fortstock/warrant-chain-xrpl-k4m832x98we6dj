// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: blockchain/types/v1/transaction.proto

package typesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Event value params.
type EventValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventValue) Reset() {
	*x = EventValue{}
	mi := &file_blockchain_types_v1_transaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventValue) ProtoMessage() {}

func (x *EventValue) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_types_v1_transaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventValue.ProtoReflect.Descriptor instead.
func (*EventValue) Descriptor() ([]byte, []int) {
	return file_blockchain_types_v1_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *EventValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Event object.
type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc          string                 `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Hex           string                 `protobuf:"bytes,3,opt,name=hex,proto3" json:"hex,omitempty"`
	Input         string                 `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	Values        []*EventValue          `protobuf:"bytes,5,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_blockchain_types_v1_transaction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_types_v1_transaction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_blockchain_types_v1_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Event) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

func (x *Event) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *Event) GetValues() []*EventValue {
	if x != nil {
		return x.Values
	}
	return nil
}

// Transaction object.
type Transaction struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BlockNumber    []byte                 `protobuf:"bytes,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	BlockTime      uint64                 `protobuf:"varint,3,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	BlockCount     uint64                 `protobuf:"varint,4,opt,name=block_count,json=blockCount,proto3" json:"block_count,omitempty"`
	FullyConfirmed bool                   `protobuf:"varint,5,opt,name=fully_confirmed,json=fullyConfirmed,proto3" json:"fully_confirmed,omitempty"`
	IsSuccess      bool                   `protobuf:"varint,6,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	GasUsed        uint64                 `protobuf:"varint,7,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	GasPrice       uint64                 `protobuf:"varint,8,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	Method         string                 `protobuf:"bytes,9,opt,name=method,proto3" json:"method,omitempty"`
	Input          string                 `protobuf:"bytes,10,opt,name=input,proto3" json:"input,omitempty"`
	Events         []*Event               `protobuf:"bytes,11,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_blockchain_types_v1_transaction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_types_v1_transaction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_blockchain_types_v1_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetBlockNumber() []byte {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

func (x *Transaction) GetBlockTime() uint64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

func (x *Transaction) GetBlockCount() uint64 {
	if x != nil {
		return x.BlockCount
	}
	return 0
}

func (x *Transaction) GetFullyConfirmed() bool {
	if x != nil {
		return x.FullyConfirmed
	}
	return false
}

func (x *Transaction) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *Transaction) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *Transaction) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *Transaction) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Transaction) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *Transaction) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

var File_blockchain_types_v1_transaction_proto protoreflect.FileDescriptor

const file_blockchain_types_v1_transaction_proto_rawDesc = "" +
	"\n" +
	"%blockchain/types/v1/transaction.proto\x12\x13blockchain.types.v1\"6\n" +
	"\n" +
	"EventValue\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\x90\x01\n" +
	"\x05Event\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04desc\x18\x02 \x01(\tR\x04desc\x12\x10\n" +
	"\x03hex\x18\x03 \x01(\tR\x03hex\x12\x14\n" +
	"\x05input\x18\x04 \x01(\tR\x05input\x127\n" +
	"\x06values\x18\x05 \x03(\v2\x1f.blockchain.types.v1.EventValueR\x06values\"\xe2\x02\n" +
	"\vTransaction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fblock_number\x18\x02 \x01(\fR\vblockNumber\x12\x1d\n" +
	"\n" +
	"block_time\x18\x03 \x01(\x04R\tblockTime\x12\x1f\n" +
	"\vblock_count\x18\x04 \x01(\x04R\n" +
	"blockCount\x12'\n" +
	"\x0ffully_confirmed\x18\x05 \x01(\bR\x0efullyConfirmed\x12\x1d\n" +
	"\n" +
	"is_success\x18\x06 \x01(\bR\tisSuccess\x12\x19\n" +
	"\bgas_used\x18\a \x01(\x04R\agasUsed\x12\x1b\n" +
	"\tgas_price\x18\b \x01(\x04R\bgasPrice\x12\x16\n" +
	"\x06method\x18\t \x01(\tR\x06method\x12\x14\n" +
	"\x05input\x18\n" +
	" \x01(\tR\x05input\x122\n" +
	"\x06events\x18\v \x03(\v2\x1a.blockchain.types.v1.EventR\x06eventsB\xa1\x01\n" +
	"\x17com.blockchain.types.v1B\x10TransactionProtoP\x01Z@gitlab.com/warrant1/warrant/protobuf/blockchain/types/v1;typesv1\xa2\x02\x03BTX\xaa\x02\x13Blockchain.Types.V1\xca\x02\x13Blockchain\\Types\\V1b\x06proto3"

var (
	file_blockchain_types_v1_transaction_proto_rawDescOnce sync.Once
	file_blockchain_types_v1_transaction_proto_rawDescData []byte
)

func file_blockchain_types_v1_transaction_proto_rawDescGZIP() []byte {
	file_blockchain_types_v1_transaction_proto_rawDescOnce.Do(func() {
		file_blockchain_types_v1_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_blockchain_types_v1_transaction_proto_rawDesc), len(file_blockchain_types_v1_transaction_proto_rawDesc)))
	})
	return file_blockchain_types_v1_transaction_proto_rawDescData
}

var file_blockchain_types_v1_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_blockchain_types_v1_transaction_proto_goTypes = []any{
	(*EventValue)(nil),  // 0: blockchain.types.v1.EventValue
	(*Event)(nil),       // 1: blockchain.types.v1.Event
	(*Transaction)(nil), // 2: blockchain.types.v1.Transaction
}
var file_blockchain_types_v1_transaction_proto_depIdxs = []int32{
	0, // 0: blockchain.types.v1.Event.values:type_name -> blockchain.types.v1.EventValue
	1, // 1: blockchain.types.v1.Transaction.events:type_name -> blockchain.types.v1.Event
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_blockchain_types_v1_transaction_proto_init() }
func file_blockchain_types_v1_transaction_proto_init() {
	if File_blockchain_types_v1_transaction_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_blockchain_types_v1_transaction_proto_rawDesc), len(file_blockchain_types_v1_transaction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_blockchain_types_v1_transaction_proto_goTypes,
		DependencyIndexes: file_blockchain_types_v1_transaction_proto_depIdxs,
		MessageInfos:      file_blockchain_types_v1_transaction_proto_msgTypes,
	}.Build()
	File_blockchain_types_v1_transaction_proto = out.File
	file_blockchain_types_v1_transaction_proto_goTypes = nil
	file_blockchain_types_v1_transaction_proto_depIdxs = nil
}
